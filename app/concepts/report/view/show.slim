.row
  .col-lg-12
      .page-header
        h1 = model.title

.row
  .col-lg-12
    .text-right style="margin-bottom: 20px;"
      button id="generate_report" class="btn btn-outline btn-success" Generate Report
    .panel.panel-default
      .panel.body
        - obj_array.each do |obj|
          .row style="margin-top:40px;"
            = cell (obj[:type]), model, obj: obj

javascript:

  var originalLineDraw = Chart.controllers.line.prototype.draw;
  Chart.helpers.extend(Chart.controllers.line.prototype, {
    draw: function() {
      originalLineDraw.apply(this, arguments);

      var chart = this.chart;
      var ctx = chart.chart.ctx;

      var value = chart.config.data.lineAtValue;
      var colour = chart.config.data.colourAt;
      if (value) {
        var xaxis = chart.scales['x-axis-0'];
        var yaxis = chart.scales['y-axis-1'];

        var at_point = xaxis.getPixelForValue(value);

        ctx.save();
        ctx.beginPath();
        ctx.moveTo(at_point, yaxis.top + 60);
        ctx.strokeStyle = colour;
        ctx.lineTo(at_point, yaxis.bottom);
        ctx.stroke();
        ctx.restore();

        // write AT
        ctx.textAlign = 'center';
        ctx.fillStyle = '#000000';
        ctx.fillText("AT", at_point, yaxis.top + 40);
      }
    }
  });

  function b64toBlob(b64Data, contentType, sliceSize) {
    contentType = contentType || '';
    sliceSize = sliceSize || 512;

    var byteCharacters = atob(b64Data);
    var byteArrays = [];

    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);

        var byteNumbers = new Array(slice.length);
        for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
        }

        var byteArray = new Uint8Array(byteNumbers);

        byteArrays.push(byteArray);
    }

    var blob = new Blob(byteArrays, {type: contentType});
    return blob;
  }

  function getAllElements(){

  }

  document.getElementById('generate_report').addEventListener('click', function() {
    var canvas = document.getElementById('canvas');
    var image_type = 'image/png'
    var dataURL = canvas.toDataURL(image_type, 1.0);
    var mybase64 = dataURL.replace(/^data:image\/\w+;base64,/, "");

    console.log(dataURL);

    var file= b64toBlob(mybase64, image_type);
    // Create new form data
    var fd = new FormData();
    // Append our Canvas image file to the form data
    fd.append("image", file);
    // And send it
    $.ajax({
       url: "/reports/#{model.id}/generate_pdf",
       type: "POST",
       data: fd,
       processData: false,
       contentType: false,
    });
  });
